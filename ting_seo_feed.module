<?php

/**
 * @file
 * Ting smart carousel module main file.
 */
use OpenSearch\OpenSearchTingObjectCollection;


function ting_seo_feed_menu() {
  $items = array();

  $items['bookfeed'] = array(
      'title' => 'Ting seo feed',
      'page callback' => 'ting_seo_feed_make_feed',
      //'page arguments' => array(0, 1, 2, 3),
      'access arguments' => array('access content'),
  );
  


  return $items;
}

//function ting_object_tree_theme($existing, $type, $theme, $path) {
//  return array(
//      'ting_object_tree_item' => array(
//          'variables' => array(
//              'title' => NULL,
//              'creators' => NULL,
//              'cover' => NULL,
//          ),
//          'template' => 'ting-object-tree-item',
//          'path' => $path . '/templates',
//      ),
//      'ting_object_tree_page' => array(
//          'variables' => array(
//              'items' => NULL,
//              'links' => NULL,
//              'breadcrumb' => NULL,
//              'menu' => NULL,
//              'title' => NULL,
//          ),
//          'template' => 'ting-object-tree-page',
//          'path' => $path . '/templates',
//      ),
//  );
//}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_seo_feed_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

function ting_seo_feed_make_feed() {
  $book_feed = ting_seo_feed_start_book_feed(); 
  $query = 'krimi and facet.type="bog"';
  $start = 0;
  $size = 2;
  $results = ting_seo_feed_find_entities_with_covers($query, $start, $size, array()); 
  $book_feed = ting_seo_feed_add_books_to_feed($results, $book_feed);
  $output = ting_seo_feed_make_jsonld($book_feed);
   file_put_contents("/var/www/drupal7vm/drupal/debug/feed3.txt", print_r($book_feed, TRUE), FILE_APPEND);
    file_put_contents("/var/www/drupal7vm/drupal/debug/feed4.txt", print_r($output, TRUE));
  print_r($output, TRUE);
}

function ting_seo_feed_add_books_to_feed($results, $book_feed) {
  foreach ($results->openSearchResult->collections as $collection) {
    file_put_contents("/var/www/drupal7vm/drupal/debug/feed6.txt", print_r($collection, TRUE), FILE_APPEND);
    $book = ting_seo_feed_process_collection($collection);
    if (isset($book)) {
      $book_feed['dataFeedElement'][] = $book;
    }
  }
  return $book_feed;
}

function ting_seo_feed_process_collection($collection) {
  $object = $collection->getPrimary_object()->getTingObject();
file_put_contents("/var/www/drupal7vm/drupal/debug/feed8.txt", print_r($object->getType(), TRUE), FILE_APPEND);
  if ($object->getType() == 'Bog') {
    file_put_contents("/var/www/drupal7vm/drupal/debug/feed7.txt", print_r("ramt", TRUE), FILE_APPEND);
    $book = array(
      '@context' => 'https://schema.org',
      '@type' => 'Book',
      'name' => $object->getShortTitle(),
    );
    return $book;
  } else {
    return NULL;
  }
}

function ting_seo_feed_start_book_feed() {
  $feed = array (
    '@context' => 'https://schema.org',
    '@type' => 'DataFeed',
    'dataFeedElement' => array(),
  );
  return $feed;
}

function ting_seo_feed_make_jsonld($items) {
file_put_contents("/var/www/drupal7vm/drupal/debug/feed2.txt", print_r($items  , TRUE), FILE_APPEND);
  // Turn the structured data array into JSON LD and add it to page head.
  if (count($items) > 0) {
    // Json_encode the results.
    $jsonld = SchemaMetatagManager::encodeJsonld($items);
    return $jsonld;
  }
}





/**
 * Find ting entities with covers from a query.
 *
 * @param string $query
 *   Query to use.
 * @param int $start
 *   Offset to start from.
 * @param int $size
 *   Search chunk size to use.
 * @param array $ignore
 *   Material ids to skip.
 *
 * @return array
 *   Array of found ting entities (an array), next start to use, and whether
 *   the result end was reached.
 */
function ting_seo_feed_find_entities_with_covers($query, $start, $size, array $ignore) {
  file_put_contents("/var/www/drupal7vm/drupal/debug/newcar2.txt", print_r($query, TRUE), FILE_APPEND);
  $entities_found_with_covers = array();
  $finished = FALSE;
  $entities = array();

  $sal_query = ting_start_query()
          ->withRawQuery($query)
          ->withFacets(array('facet.subject'))
          ->withTermsPrFacet(26)
          ->withSort('date_descending')
          // ->withPage($page)
          ->withCount($size)
          ->withMaterialFilter($ignore, FALSE);

  $sal_query->reply_only = true;
  $results = $sal_query->execute();
file_put_contents("/var/www/drupal7vm/drupal/debug/newcar3.txt", print_r($results , TRUE), FILE_APPEND);
//  if (!$results->hasMoreResults()) {
//    $finished = TRUE;
//  }
//  $collections = $results->getTingEntityCollections();
//
//  
// $collections = $results->getTingEntityCollections();
//  foreach ($results->openSearchResult->collections as $collection) {
//    $object = $collection->getPrimary_object();
//    $entities[$object->getId()] = $object;
//  }
//file_put_contents("/var/www/drupal7vm/drupal/debug/newobj2.txt", print_r($entities, TRUE), FILE_APPEND);
//  // See what materials have covers.
//  $covers = ting_covers_get(array_keys($entities));
//
//  // Loop over the fetched covers and build items.
//  foreach ($covers as $id => $path) {
//    $entities_found_with_covers[$id] = $entities[$id];
//  }
//  
//  $objects =  ting_object_tree_proces_results($entities_found_with_covers);
//  $links = array();//ting_object_tree_get_subjects($results);
//  $result = array(
//          'objects' => $objects,
//          'links' => $links,
//  );

  return $results;
}

